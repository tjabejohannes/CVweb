{"version":3,"sources":["components/Card.jsx","components/BaseInformation.jsx","components/DetailedInformation.jsx","components/About.jsx","components/Project.jsx","components/Projects.jsx","App.jsx","serviceWorker.js","index.js"],"names":["StyledCard","styled","div","StyledLargeCard","StyledLargeCardNoHover","Card","state","this","props","size","type","className","children","Component","StyledBaseInformation","BaseInformation","name","alt","src","img","StyledDetailedInformation","StyledChip","withStyles","root","background","color","Chip","StyledAvatar","padding","width","height","Avatar","DetailedInformation","title","description","details","map","element","i","key","label","avatar","icon","StyledCardContainer","About","birthday","detailedCards","tlf","profileImage","card","StyledProject","Project","handleClick","bind","window","location","replace","link","onClick","stack","contributor","console","log","process","image","Projects","projects","StyledApp","App","to","homePath","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3912e3a0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst StyledCard = styled.div`\n    background: #f0f0f0;\n    text-align: center;\n    border-radius: 2px;\n    margin: 10px;\n    width: 48%;\n    transition: all 0.3s cubic-bezier(.25, .8, .25, 1);\n    z-index: 0;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    @media (max-width: 1200px) {\n        width: 98%;\n    }\n`\n\nconst StyledLargeCard = styled(StyledCard)`\n    width: 98%;\n    &:hover{\n        box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n    }\n`\nconst StyledLargeCardNoHover = styled(StyledCard)`\n    width: 98%;\n`\n\n\nclass Card extends Component {\n    state = {}\n    render() {\n\n        if (this.props.size === \"large\") {\n            return (\n                this.props.type === \"noHover\" ?\n                    <StyledLargeCardNoHover >\n                        <div className={this.props.type}>\n                            {this.props.children}\n                        </div>\n                    </StyledLargeCardNoHover> :\n                    <StyledLargeCard >\n                        <div className={this.props.type}>\n                            {this.props.children}\n                        </div>\n                    </StyledLargeCard>\n            )\n        } else {\n            return (\n                <StyledCard >\n                    <div className={this.props.type}>\n                        {this.props.children}\n                    </div>\n                </StyledCard>)\n        }\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst StyledBaseInformation = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    width:100%;\n    \n\n\n    .information{\n        display: flex;\n        justify-content:center;\n        flex-direction: column;\n        width:70%;\n    }\n\n    .profileImageContainer{\n        width:20%;\n    }\n    .profileImageContainer img{\n        margin:10%;\n        width:70%;\n        height:auto;\n        border-radius: 50%;\n    }\n`\n\n\nclass BaseInformation extends Component {\n    render() {\n        return (\n            <StyledBaseInformation>\n                <div className=\"information\">\n                    <h2>{this.props.name}</h2>\n                </div>\n                <div className=\"profileImageContainer\">\n                    <img alt=\"profile\" src={this.props.img} />\n                </div>\n            </StyledBaseInformation>\n        );\n    }\n}\n\nexport default BaseInformation;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Chip, Avatar } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\n\nconst StyledDetailedInformation = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: stretch;\n    max-height: 250px;\n\n    .information{\n        background-image: linear-gradient(to right, #f0f0f0 , #eaeaea);\n        padding: 10px;\n        width: 30%;\n    }\n\n    .information h1{\n        font-size:20px;\n        font-weight: bold;\n    }\n\n    .description{\n        font-size:10px;\n        color: #959595;\n    }\n\n    .details{\n        display: flex;\n        flex-direction: column;\n        flex-wrap: wrap;\n        width:70%;\n        text-align: left;\n        padding-top:5%;\n        padding-bottom:5%;\n    }\n\n    .detail {\n        padding-left:2%;\n        &:hover{\n            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.2);\n            background-color: rgba(0, 0, 0, 0.1);\n        }\n        color: #000;\n        margin-top: 2%;\n        width:44%;\n        margin-right:2%;\n    }\n    .badges{\n        height: 80%;\n        margin:1%;\n    }\n    .badges h1{\n        font-size: 15px;\n        color: #959595;\n    }\n    .badge{\n        margin-block-end:2%;\n    }\n`\n\nconst StyledChip = withStyles({\n    root: {\n        background:  '#fff',\n        color: '#000',\n    },\n    \n})(Chip);\n\n\nconst StyledAvatar = withStyles({\n    root: {\n        background:  \"#fff\",\n        padding: \"5%\",\n        width: \"30px\",\n        height: \"30px\"\n    }\n    \n})(Avatar);\n\nclass DetailedInformation extends Component {\n    render() {\n        return (\n            <StyledDetailedInformation>\n                <div className=\"information\">\n                    <h1>{this.props.title}</h1>\n                    <div className=\"description\">\n                        {this.props.description}\n                    </div>\n                </div>\n                <div className=\"details\">\n                    {this.props.details.map((element, i) => {\n                        return (\n                            <div className=\"badge\" key={i}>\n                                <StyledChip \n                                    label={element.name} \n                                    avatar={<StyledAvatar \n                                                        alt={element.name} \n                                                        src={\"https://icongr.am/devicon/\" + element.icon + \".svg?size=300\"} />} />\n                            </div>\n                        )\n                    })}\n                </div>\n            </StyledDetailedInformation>\n        )\n    }\n}\n\nexport default DetailedInformation;","import React, { Component } from 'react';\nimport Card from './Card';\nimport BaseInformation from './BaseInformation';\nimport DetailedInformation from './DetailedInformation';\nimport styled from 'styled-components';\n\nconst StyledCardContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    width:100%;\n`\n\nclass About extends Component {\n    state = {\n        name: \"Tjabe Johannes van Lessen\",\n        birthday: \"05.12.96\",\n        detailedCards: [\n            {\n                title: \"Technology\",\n                details: [{name:'Android', icon:\"android-plain\"}, {name:'NodeJS', icon:\"nodejs-plain\"},{name:'HTML',icon:'html5-plain'},{name:'Git',icon:'git-plain'},{name:'CSS',icon:'css3-plain'},{name:'Electron',icon:\"electron-original\"},{name:'Mysql',icon:'mysql-plain'}],\n                description: \"Comfortable development technologies\",\n            },\n            {\n                title: \"Languages\",\n                details: [{name:'Java', icon:\"java-plain\"}, {name:'JavaScript', icon:\"javascript-plain\"}, {name:'Python', icon:\"python-plain\"},],\n                description: \"Comfortable development languages\",\n            },\n            {\n                title: \"Software\",\n                details: [{name:'Photoshop', icon:\"photoshop-line\"}, {name:'Visualstudio',icon:'visualstudio-plain'},{name:'Gitlab',icon:'gitlab-plain'},{name:'React',icon:'react-original'},{name:'CSS',icon:'css3-plain'},{name:'Electron',icon:\"electron-original\"},{name:'Mysql',icon:'mysql-plain'}],\n                description: \"Software used weekly\",\n            },\n        ]\n    }\n    render() {\n        return (\n            <StyledCardContainer>\n                <Card size=\"large\" type=\"noHover\" >\n                    <BaseInformation name={this.state.name} tlf={this.state.tlf} profileImage=\"http://localhost:3000/ProfileBackgroundArt.png\" img=\"https://scontent-arn2-1.cdninstagram.com/vp/f2675ce4947d4a7d0133287212f84a9f/5DEFA134/t51.2885-19/s320x320/32430479_371055023406210_3021052246222700544_n.jpg?_nc_ht=scontent-arn2-1.cdninstagram.com\"></BaseInformation>\n                </Card>\n                {this.state.detailedCards.map((card, i) => {\n                    return (\n                        <Card key={i}>\n                            <DetailedInformation title={card.title} description={card.description} details={card.details}>\n\n                            </DetailedInformation>\n                        </Card>)\n                })}\n            </StyledCardContainer>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Chip, Avatar } from '@material-ui/core';\nimport FaceIcon from '@material-ui/icons/Face';\nimport { withStyles } from '@material-ui/styles';\n\nconst homePath = process.env.PUBLIC_URL;\n\nconst StyledProject = styled.div`\n    \n    width:100%;\n    text-align: left;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n\n    .information{\n        width:80%;\n        display: flex;\n        flex-direction: column;\n    }\n    .title{\n        margin-bottom: 5px;\n        background-image: linear-gradient(to right, #eaeaea , #f0f0f0);\n        border-radius:2px;\n    }\n    .title h1{\n        font-size: 20px;\n        margin-block-start:10px;\n        margin-left: 15px;\n        font-weight: bold;\n    }\n\n    .description{\n        color: #000;\n    }\n\n    .description h1{\n        font-size: 15px;\n        color: #959595;\n        \n    }\n\n    .projectInfoContainer{\n        display: flex;\n        justify-content: space-between;\n        margin-left: 15px;\n        padding:10px;\n    }\n\n    .badges{\n        height: 80%;\n        margin:1%;\n    }\n    .badges h1{\n        font-size: 15px;\n        color: #959595;\n    }\n    .badge{\n        margin-block-end:2%;\n    }\n\n    .chipsTweaks{\n        background-color:  #fff;\n        color: #000;\n    }\n    .avatarTweaks{\n        background-color:  #fff;\n        padding: 5%;\n\n    }\n\n    .technology{\n        max-width: 60%;\n        min-width: 20%;\n    }\n\n    .contributors{\n        margin-left: 15px;\n        padding:10px;\n    }\n\n    .imageContainer{\n        height:100%;\n        margin-right: 3%;\n    }\n    .crop {\n        overflow: hidden;\n        width: 200px;\n        height: 200px;\n        border-radius: 3%;\n        vertical-align: middle;\n    }\n    .crop img {\n        object-fit: cover;\n        object-position: 50% 50%;\n        width: 200px;\n        height: 200px;\n    }\n    @media (max-width: 768px) {\n        flex-direction: column;\n        .imageContainer{\n            margin-right: 0%;\n            margin-bottom: 3%;\n        }\n        .information{\n            width: 100%;\n        }\n    }\n`\n\nconst StyledChip = withStyles({\n    root: {\n        background:  '#fff',\n        color: '#000',\n    },\n    \n})(Chip);\n\n\nconst StyledAvatar = withStyles({\n    root: {\n        background:  \"#fff\",\n        padding: \"5%\",\n        width: \"30px\",\n        height: \"30px\"\n    }\n    \n})(Avatar);\n\nclass Project extends Component {\n    constructor() {\n        super();\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick() {\n        window.location.replace(this.props.link);\n    }\n    render() {\n        return (\n            <StyledProject onClick={this.handleClick}>\n                <div className=\"information\" >\n                    <div className=\"title\">\n                        <h1>{this.props.name}</h1>\n                    </div>\n                    <div className=\"projectInfoContainer\">\n                        <div className=\"description\">\n                            <h1>\n                                Description:\n                                </h1>\n                            <p>\n                                {this.props.description}\n                            </p>\n                        </div>\n                        <div className=\"badges technology\">\n                            <h1>\n                                Technology:\n                                </h1>\n                            {this.props.stack.map((element, i) => {\n                                return (\n                                    <div className=\"badge\" key={i}>\n                                        <StyledChip \n                                            label={element.name} \n                                            avatar={<StyledAvatar alt={element.name} src={\"https://icongr.am/devicon/\" + element.icon + \".svg?size=300\"} />} \n                                            />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"badges contributors\">\n                        <h1>\n                            Contributors:\n                            </h1>\n                        {this.props.contributor.map((element, i) => {\n                            return (\n                                <div className=\"badge\" key={i}>\n                                    <Chip icon={<FaceIcon />} label={element} />\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n                <div className=\"imageContainer\">\n                    <div className=\"crop\">\n                        {console.log(\"\" + homePath)}\n\n                        <img src={homePath + this.props.image} alt=\"preview\" />\n                    </div>\n                </div>\n            </StyledProject>\n        );\n    }\n}\n\nexport default Project;","import React, { Component } from 'react';\n\nimport Card from './Card';\nimport Project from './Project';\nimport styled from 'styled-components';\n\nconst StyledCardContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    width:100%;\n`\n\nclass Projects extends Component {\n    state = {\n        projects: [\n            {\n                name: \"ClipPost\",\n                link: \"https://github.com/tjabejohannes/ClipPost\",\n                description: \"ClipPost is a application that makes using the clipboard on your computer as efficient as possible.\",\n                stack: [{ name: 'Electron', icon: \"electron-original\" }, { name: 'Javascript', icon: \"javascript-plain\" }],\n                image: \"/img/clippost.png\",\n                contributor: ['Tjabe Johannes van Lessen', 'Tor Skuggevik'],\n            },\n            {\n                name: \"P5\",\n                link: \"http://tjabejv.nvg.org/\",\n                description: \"P5js is JavaScript's answer to the Processing graphical library. Both are OpenSource.\",\n                stack: [{ name: 'Javascript', icon: \"javascript-plain\" }, { name: 'P5js', icon: \"javascript-plain\" },],\n                image: \"/img/P5js.png\",\n                contributor: ['Tjabe Johannes van Lessen'],\n            },\n            {\n                name: \"BotB\",\n                link: \"https://github.com/battleofthebases/game\",\n                description: \"TDT4240: Software Architecture Project. The task was to create a Android Game, with focus on good architecture.\",\n                stack: [{ name: 'Java', icon: \"java-plain\" }, { name: 'Android', icon: \"android-plain\" }, { name: 'NodeJS', icon: \"nodejs-plain\" }, { name: \"AWS\", icon: \"amazonwebservices-plain-wordmark\" }],\n                image: \"/img/BotB.jpg\",\n                contributor: ['Christian Nyvoll', 'Edvard Bakken', 'Håvard Aasmo', 'Tor Skuggevik', 'Tjabe Johannes van Lessen'],\n            },\n            {\n                name: \"Experter i team\",\n                link: \"https://github.com/OlavH96/EIT\",\n                description: \"TDT4856: Eksperter i team.\",\n                stack: [{ name: 'Java', icon: \"java-plain\" }, { name: 'Android', icon: \"android-plain\" }, { name: 'NodeJS', icon: \"nodejs-plain\" }],\n                image: \"/img/EIT.png\",\n                contributor: ['Anders Ulfsnes', 'Espen Marinius Hansen', 'Olav Reppe Husby', 'Michael Skibeli Mullins', 'Tjabe Johannes van Lessen', 'Torstein Molland'],\n            }\n        ]\n    }\n\n    render() {\n        return (\n            <StyledCardContainer>\n                {this.state.projects.map((element, i) => {\n                    return (\n                        <Card key={i} size=\"large\">\n                            <Project\n                                name={element.name}\n                                link={element.link}\n                                description={element.description}\n                                stack={element.stack}\n                                image={element.image}\n                                contributor={element.contributor} />\n                        </Card>)\n                })}\n            </StyledCardContainer>);\n    }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport About from './components/About.jsx';\nimport Projects from './components/Projects.jsx';\n\nimport styled from 'styled-components';\n\nconst StyledApp = styled.div`\n    margin-top: 70px;\n`\n\nconst homePath = process.env.PUBLIC_URL;\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <StyledApp>\n          <nav className=\"navbar navbar-expand fixed-top navbar-light bg-light\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\"><Link to={homePath + '/'} className=\"nav-link\">About Me</Link></li>\n              <li className=\"nav-item\"><Link to={homePath + '/projects'} className=\"nav-link\">Projects</Link></li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route exact path={homePath + '/'} component={About} />\n            <Route path={homePath + '/projects'} component={Projects} />\n          </Switch>\n        </StyledApp>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('App'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}